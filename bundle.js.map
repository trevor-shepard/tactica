{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./board.js","webpack:///./index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;;;;;AAKA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,2BAA2B,YAAY;AACvC;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,uBAAuB,QAAQ;AAC/B,2BAA2B,QAAQ;AACnC,sCAAsC;AACtC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;;AAGT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA,kCAAkC;AAClC;AACA;AACA,kCAAkC;AAClC;AACA;AACA,kCAAkC;AAClC;AACA;AACA,kCAAkC;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;;AAEe,oEAAK,E;;;;;;;;;;;;ACxOpB;AAAA;AAA2B;;AAE3B;AACA,QAAQ,8CAAK;AACb,CAAC,C","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","class Board {\n\n\n    \n\n    constructor(boardSize, numSquares) {\n        // set board size, must be evenly divizable by number of grid squares\n        this.boardSize = boardSize - (boardSize % numSquares)\n        this.numSquares = numSquares\n        \n        this.setCanvas()\n        \n        this.setImages()\n        \n        this.createObjects()\n        \n        this.setEventListeners()\n\n        this.genGrid()\n\n        this.drawClicks = this.drawClicks.bind(this)\n        this.main = this.main.bind(this)\n        this.render = this.render.bind(this)\n        this.reset = this.reset.bind(this)\n\n        // Let's play this game!\n        this.then = Date.now();\n        this.reset();\n        this.main();\n        debugger    \n    }\n\n    setImages() {\n        // Background image\n        this.bgReady = false;\n        this.bgImage = new Image();\n        this.bgImage.onload = () => {\n            this.bgReady = true;\n        };\n        this.bgImage.src = \"images/grass_template2.jpg\";\n\n        // Hero image\n        this.heroReady = false;\n        this.heroImage = new Image();\n        this.heroImage.onload = () => {\n            this.heroReady = true;\n        };\n        this.heroImage.src = \"images/hero.png\";\n        // Background image\n        this.monsterReady = false;\n        this.monsterImage = new Image();\n        this.monsterImage.onload =  () => {\n            this.monsterReady = true;\n        };\n        this.monsterImage.src = \"images/monster.png\";\n\n    }\n\n    createObjects(){\n        // Game objects\n        this.hero = {\n            speed: 256, // movement in pixels per second\n            x: 0,\n            y: 0\n        };\n        this.monster = {\n            x: 0,\n            y: 0\n        };\n        this.monstersCaught = 0;\n       \n    }\n    \n    setCanvas() {\n        // insert the canvas\n        this.canvas = document.createElement(\"canvas\");\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.canvas.width = this.boardSize;\n        this.canvas.height = this.boardSize;\n        this.canvas.id = 'myCanvas'\n        document.body.appendChild(this.canvas);\n    }\n    \n\n    drawGrid() {\n        \n        for (let index = 1; index < 20; index++) {\n            let boardLength = index * (this.boardSize / this.numSquares)\n           \n\n            this.ctx.beginPath();\n            this.ctx.lineTo(boardLength,0);\n            this.ctx.lineTo(boardLength, 600);\n            this.ctx.stroke();\n\n            this.ctx.beginPath();\n            this.ctx.lineTo(0, boardLength);\n            this.ctx.lineTo(600, boardLength);\n            this.ctx.stroke();\n        }\n\n    }\n\n    genGrid() {\n        this.board = {}\n        for (let x = 1; x < 21; x++) {\n            for (let y = 1; y < 21; y++) {\n                this.board[[x, y]] = {'occupied': false}\n            }\n        }\n    }\n\n    captureClickonGrid(e){\n        const clickX = (e.x - this.elemLeft) - ((e.x - this.elemLeft) % 30)\n        const clickY = (e.y - this.elemTop) - ((e.y - this.elemTop) % 30)\n\n        const square = this.board[((clickX / 30) + 1), ((clickY / 30) + 1)]\n        \n        this.elements.push([this.heroImage, clickX, clickY])\n\n    }\n\n    setEventListeners() {\n        // Handle keyboard controls\n        this.keysDown = {};\n\n        \n        this.elemLeft = this.canvas.offsetLeft,\n        this.elemTop = this.canvas.offsetTop,\n        this.elements = [];\n\n        addEventListener('mousedown', (e) => {\n            this.captureClickonGrid(e)\n        })\n\n        addEventListener(\"keydown\", (e) => {\n            this.keysDown[e.keyCode] = true;\n        }, false);\n\n        addEventListener(\"keyup\", (e) => {\n            delete this.keysDown[e.keyCode];\n        }, false);\n        \n\n    }\n\n    reset() {\n        this.hero.x = this.canvas.width / 2;\n        this.hero.y = this.canvas.height / 2;\n\n        // Throw the monster somewhere on the screen randomly\n        this.monster.x = 32 + (Math.random() * (this.canvas.width - 64));\n        this.monster.y = 32 + (Math.random() * (this.canvas.height - 64));\n    }\n\n\n    update(modifier) {\n        if (38 in this.keysDown) { // Player holding up\n            this.hero.y -= this.hero.speed * modifier;\n        }\n        if (40 in this.keysDown) { // Player holding down\n            this.hero.y += this.hero.speed * modifier;\n        }\n        if (37 in this.keysDown) { // Player holding left\n            this.hero.x -= this.hero.speed * modifier;\n        }\n        if (39 in this.keysDown) { // Player holding right\n            this.hero.x += this.hero.speed * modifier;\n        }\n\n        // Are they touching?\n        if (\n            this.hero.x <= (this.monster.x + 32)\n            && this.monster.x <= (this.hero.x + 32)\n            && this.hero.y <= (this.monster.y + 32)\n            && this.monster.y <= (this.hero.y + 32)\n        ) {\n            this.reset();\n        }\n    }\n\n\n    render() {\n        if (this.bgReady) {\n            \n            this.ctx.drawImage(this.bgImage, 0, 0);\n        }\n\n        this.drawGrid()\n\n        if (this.heroReady) {\n            this.ctx.drawImage(this.heroImage, this.hero.x, this.hero.y);\n        }\n\n        if (this.monsterReady) {\n            this.ctx.drawImage(this.monsterImage, this.monster.x, this.monster.y);\n        }\n        \n        if (this.elements.length) {\n            \n            this.elements.forEach(this.drawClicks)\n        }\n\n    }\n\n    drawClicks(click) {\n        this.ctx.drawImage(...click)\n    }\n\n    \n    main() {\n        \n        let now = Date.now();\n        var delta = now - this.then;\n\n        this.update(delta / 1000);\n        this.render();\n\n        this.then = now;\n\n        // Cross-browser support for requestAnimationFrame\n        var w = window;\n        requestAnimationFrame = w.requestAnimationFrame || w.webkitRequestAnimationFrame || w.msRequestAnimationFrame || w.mozRequestAnimationFrame;\n\n        \n\n        // Request to do this again ASAP\n        requestAnimationFrame(this.main);\n    }\n\n}\n\nexport default Board;","import Board from './board' \n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    new Board(600, 20)\n})"],"sourceRoot":""}